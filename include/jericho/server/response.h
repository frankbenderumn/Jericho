#ifndef SERVER_RESPONSE_H_
#define SERVER_RESPONSE_H_

#include <string.h>

#include "server/defs.h"
#include "server/client.h"
#include "server/socket.h"

typedef enum {
    R200,
    R201,
    R202,
    R203,
    R204,
    R205,
    R206,
    R300,
    R301,
    R302,
    R303,
    R304,
    R305,
    R306,
    R307,
    R400,
    R401,
    R402,
    R403,
    R404,
    R405, 
    R406,
    R407,
    R408,
    R409,
    R410,
    R411,
    R412,
    R413,
    R414,
    R415,
    R416,
    R417,
    R500,
    R501,
    R502,
    R503,
    R504,
    R505
} HttpResponseType;

// intuitive
void send_400(Client* client);
void send_404(Client* client);
void serve_resource(Client* conn, const char* path);

typedef enum {
    H_ACCEPT,
    H_ACCEPT_CH,
    H_ACCEPT_CHARSET,
    H_ACCEPT_ENC,
    H_ACCEPT_LANG,
    H_ACCEPT_PATCH,
    H_ACCEPT_POST,
    H_ACCEPT_RANGES,
    H_ACCESS_CTRL_ALLOW_CREDS,
    H_ACCESS_CTRL_ALLOW_HEADERS,
    H_ACCESS_CTRL_ALLOW_METHODS,
    H_ACCESS_CTRL_ALLOW_ORIGIN,
    H_ACCESS_CTRL_EXPOSE_HEADERS,
    H_ACCESS_CTRL_MAX_AGE,
    H_ACCESS_CTRL_REQ_HEADERS,
    H_ACCESS_CTRL_REQ_METHOD,
    H_AGE,
    H_ALLOW,
    H_ALT_SVC,
    H_AUTHORIZATION,
    H_CACHE_CTRL,
    H_CLR_SITE_DATA,
    H_CONN,
    H_CONTENT_ENC,
    H_CONTENT_LANG,
    H_CONTENT_LEN,
    H_CONTENT_LOC,
    H_CONTENT_RANGE,
    H_CONTENT_SECURITY_POLICY,
    H_CONTENT_SECURITY_POLICY_REPORT_ONLY,
    H_CONTENT_TYPE,
    H_COOKIE,
    H_CROSS_ORIGIN_EMBEDDER_POLICY,
    H_CROSS_ORIGIN_OPENER_POLICY,
    H_CROSS_ORIGIN_RESOURCE_POLICY,
    H_DATE,
    H_DIGEST,
    H_DNT,
    H_ETAG,
    H_EXPECT,
    H_EXPECT_CT,
    H_EXPIRES,
    H_FORWARDED,
    H_FROM,
    H_HOST,
    H_IF_MATCH,
    H_IF_MODIFIED_SINCE,
    H_IF_NONE_MATCH,
    H_IF_RANGE,
    H_IF_UNMODIFIED_SINCE,
    H_KEEP_ALIVE,
    H_LAST_MODIFIED,
    H_LINK,
    H_LOCATION,
    H_NEL,
    H_ORIGIN,
    H_PROXY_AUTHENTICATE,
    H_PROXY_AUTHORIZATION,
    H_RANGE,
    H_REFERER,
    H_REFERRER_POLICY,
    H_RETRY_AFTER,
    H_SAVE_DATA,
    H_SEC_FETCH_DEST,
    H_SEC_FETCH_MODE,
    H_SEC_FETCH_SITE,
    H_SEC_FETCH_USER,
    H_SEC_WS_ACCEPT,
    H_SERVER,
    H_SERVER_TIMING,
    H_SERVIVE_WORKER_NAVIGATION_PRELOAD,
    H_SET_COOKIE,
    H_SOURCEMAP,
    H_STRICT_TRANSPORT_SECURITY,
    H_TE,
    H_TIMING_ALLOW_ORIGIN,
    H_TK,
    H_TRAILER,
    H_TRANSFER_ENC,
    H_UPGRADE,
    H_UPGRADE_INSECURE_REQUESTS,
    H_USER_AGENT,
    H_VARY,
    H_VIA,
    H_WANT_DIGEST,
    H_WWW_AUTHENTICATE,
    H_X_CONTENT_TYPE_OPTIONS,
    H_X_DNS_PREFETCH_CONTROL,
    H_X_FRAME_OPTIONS,
    H_X_XSS_PROTECTION,
    H_END
} HttpHeaderType;

void post_resource(Client* conn, char* resource);

#endif